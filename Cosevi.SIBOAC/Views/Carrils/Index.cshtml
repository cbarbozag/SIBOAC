
@model PagedList.IPagedList<Cosevi.SIBOAC.Models.Carril>
@using PagedList.Mvc;


<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Lista";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Lista de Carriles</h2>

<p>
    @Html.ActionLink("Nuevo", "Create", null, new { @class = "btn btn-success" })
</p>

<table class="table">
   
    <tr  class="panel-heading">
        <th>
            @Html.DisplayNameFor(model => model.First().Id)
            @*@Html.DisplayNameFor(model => model.Id)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Descripcion)
            @*@Html.DisplayNameFor(model => model.Descripcion)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Estado)
            @*@Html.DisplayNameFor(model => model.Estado)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().FechaDeInicio)
            @*@Html.DisplayNameFor(model => model.FechaDeInicio)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().FechaDeFin)
            @*@Html.DisplayNameFor(model => model.FechaDeFin)*@
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    if (item.Estado == "I")
    {
        <tr class="warning">
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaDeInicio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaDeFin)
            </td>
            <td>
               
                  
                        <button data-title="Edit" data-toggle="modal" class="btn btn-success btn-xs" data-target="#Editar" onclick="location.href='@Url.Action("Edit", "Carrils", new { id = item.Id.Trim() })'">
                            <span class="glyphicon glyphicon-pencil">
                            </span>
                        </button>
                  
              
                        <button data-title="Edit" data-toggle="modal" class="btn btn-success btn-xs" data-target="#Detalles" onclick="location.href='@Url.Action("Details", "Carrils", new { id = item.Id.Trim() })'">
                            <span class="glyphicon glyphicon-eye-open">
                            </span>
                        </button>
                 

                      <button data-title="Edit" data-toggle="modal" class="btn btn-success btn-xs" data-target="#Activar" onclick="location.href='@Url.Action("Delete", "Carrils", new { id = item.Id.Trim() })'">
                            <span class="glyphicon glyphicon-ok">
                            </span>
                        </button>
                  

</td>
        </tr>
    }
    else
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaDeInicio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaDeFin)
            </td>
            <td>
               
                    <button data-title="Edit" data-toggle="modal" class="btn btn-success btn-xs" data-target="#Editar" onclick="location.href='@Url.Action("Edit", "Carrils", new { id = item.Id.Trim() })'">
                        <span class="glyphicon glyphicon-pencil">                         
                       </span>
                    </button>
                
                    <button data-title="Edit" data-toggle="modal" class="btn btn-success btn-xs" data-target="#Detalles" onclick="location.href='@Url.Action("Details", "Carrils", new { id = item.Id.Trim() })'">
                        <span class="glyphicon glyphicon-eye-open">
                        </span>
                    </button>
                    <button data-title="Edit" data-toggle="modal" class="btn btn-success btn-xs" data-target="#Inactivar" onclick="location.href='@Url.Action("Delete", "Carrils", new { id = item.Id.Trim() })'">
                       <span class="glyphicon glyphicon-remove">
                       </span>
                   </button>
                
                  
</td>
        </tr>
    }
}

</table>
<br />
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de
    @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page })) 


